[{"path":"https://umatter.github.io/tidyair/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 tidyair authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://umatter.github.io/tidyair/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ulrich Matter. Maintainer.","code":""},{"path":"https://umatter.github.io/tidyair/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matter U (2023). tidyair: Tidy Data Large Language Models. R package version 0.1.0, https://umatter.github.io/tidyair/.","code":"@Manual{,   title = {tidyair: Tidy Data With Large Language Models},   author = {Ulrich Matter},   year = {2023},   note = {R package version 0.1.0},   url = {https://umatter.github.io/tidyair/}, }"},{"path":"https://umatter.github.io/tidyair/index.html","id":"tidyair-","dir":"","previous_headings":"","what":"Tidy Data With Large Language Models","title":"Tidy Data With Large Language Models","text":"Tidy Data Large Language Models.","code":""},{"path":"https://umatter.github.io/tidyair/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tidy Data With Large Language Models","text":"can install development version tidyair GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"umatter/tidyair\")"},{"path":"https://umatter.github.io/tidyair/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Tidy Data With Large Language Models","text":"basic example shows solve common problem:","code":"# load package library(tidyair)  # set your OpenAI API key OpenAIR::openai_api_key(\"YOUR-KEY-HERE\")   # Create a messy data.frame with air data  messy_data <- data.frame(    date_pm25 = c(\"2021-01-01|10\", \"2021-01-02|12\", \"2021-01-03|15\"),    date_pm10 = c(\"2021-01-01|20\", \"2021-01-02|25\", \"2021-01-03|30\"),    stringsAsFactors = FALSE  )   # Process the data.frame using tidyair  tidied_data <- tidyair(air_data)  print(tidied_data)"},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert HTML input to CSV — html_to_csv","title":"Convert HTML input to CSV — html_to_csv","text":"function takes file HTML input processes generate corresponding output CSV format. input character string, output printed console. Otherwise, CSV file generated name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert HTML input to CSV — html_to_csv","text":"","code":"html_to_csv(file)"},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert HTML input to CSV — html_to_csv","text":"file character string representing path file HTML input","code":""},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert HTML input to CSV — html_to_csv","text":"input character string, function returns output character string prints console. Otherwise, function returns output data frame generates CSV file name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert HTML input to CSV — html_to_csv","text":"","code":"if (FALSE) { html_string <- '<table>  <tr>    <th>firstName<\/th>    <th>lastName<\/th>  <\/tr>  <tr>    <td>John<\/td>    <td>Doe<\/td>  <\/tr>  <tr>    <td>Anna<\/td>    <td>Smith<\/td>  <\/tr>  <tr>    <td>Peter<\/td>    <td>Jones<\/td>  <\/tr> <\/table>' html_to_csv(html_string) }"},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Input: message content template for html_to_csv() — html_to_csv_prompt","title":"Input: message content template for html_to_csv() — html_to_csv_prompt","text":"message content serves user input html_to_csv function.","code":""},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input: message content template for html_to_csv() — html_to_csv_prompt","text":"","code":"html_to_csv_prompt"},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv_prompt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input: message content template for html_to_csv() — html_to_csv_prompt","text":"## `html_to_csv_prompt` data frame 2 rows 2 columns representing messages object API calls.","code":""},{"path":"https://umatter.github.io/tidyair/reference/html_to_csv_prompt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Input: message content template for html_to_csv() — html_to_csv_prompt","text":"Contributed umatter","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert JSON input to CSV — json_to_csv","title":"Convert JSON input to CSV — json_to_csv","text":"function takes file JSON input processes generate corresponding output CSV format. input character string, output printed console. Otherwise, CSV file generated name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert JSON input to CSV — json_to_csv","text":"","code":"json_to_csv(file)"},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert JSON input to CSV — json_to_csv","text":"file character string representing path file JSON input","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert JSON input to CSV — json_to_csv","text":"input character string, function returns output character string prints console. Otherwise, function returns output data frame generates CSV file name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert JSON input to CSV — json_to_csv","text":"","code":"if (FALSE) { json_string <- '{\"employees\":[ { \"firstName\":\"John\", \"lastName\":\"Doe\" }, { \"firstName\":\"Anna\", \"lastName\":\"Smith\" }, { \"firstName\":\"Peter\", \"lastName\":\"Jones\" } ]}' json_to_csv(json_string) }"},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Input: message content template for json_to_csv() — json_to_csv_prompt","title":"Input: message content template for json_to_csv() — json_to_csv_prompt","text":"message content serves user input json_to_csv function.","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input: message content template for json_to_csv() — json_to_csv_prompt","text":"","code":"json_to_csv_prompt"},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv_prompt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input: message content template for json_to_csv() — json_to_csv_prompt","text":"## `json_to_csv_prompt` data frame 2 rows 2 columns representing messages object API calls.","code":""},{"path":"https://umatter.github.io/tidyair/reference/json_to_csv_prompt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Input: message content template for json_to_csv() — json_to_csv_prompt","text":"Contributed umatter","code":""},{"path":"https://umatter.github.io/tidyair/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://umatter.github.io/tidyair/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://umatter.github.io/tidyair/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://umatter.github.io/tidyair/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy Data With AI and R — tidyair","title":"Tidy Data With AI and R — tidyair","text":"function takes text string path text file containing non-tidy data input, processes data using OpenAI's chat completion API enpoint backend returns tidied data.frame input text string file path generated CSV file. input path text file (containing messy data), function  also writes tidied data new CSV file name path  input file \"-tidy.csv\" suffix.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy Data With AI and R — tidyair","text":"","code":"tidyair(file)"},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy Data With AI and R — tidyair","text":"file character string specifying path CSV file, data.frame containing air data processed.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy Data With AI and R — tidyair","text":"data.frame containing processed tidied data input   text string, character string file path generated CSV file input file.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Tidy Data With AI and R — tidyair","text":"Ulrich Matter umatter@protonmail.com","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy Data With AI and R — tidyair","text":"","code":"if (FALSE) { # Create a messy data.frame with air data messy_data <- data.frame(   date_pm25 = c(\"2021-01-01|10\", \"2021-01-02|12\", \"2021-01-03|15\"),   date_pm10 = c(\"2021-01-01|20\", \"2021-01-02|25\", \"2021-01-03|30\"),   stringsAsFactors = FALSE )  # Process the data.frame using tidyair tidied_data <- tidyair(air_data) print(tidied_data)  messy_md <- \" | Merged Economics Book Data                 | |--------------------------------------------| | The Wealth of Nations - Adam Smith - 12000 | | Capital - Karl Marx - 15000                | | The General Theory of Employment, Interest and Money - John Maynard Keynes - 9000 | | The Road to Serfdom - Friedrich Hayek - 8000 | | Human Action - Ludwig von Mises - 6000     | | The Theory of the Leisure Class - Thorstein Veblen - 4500 | | The Great Transformation - Karl Polanyi - 4000 | | An Inquiry into the Nature and Causes of the Wealth of States - Arthur Laffer - 3000 | | The Affluent Society - John Kenneth Galbraith - 5500 | | The Limits of Morality - Amartya Sen - 6500 | \" tidyair(messy_md) }"},{"path":"https://umatter.github.io/tidyair/reference/tidyair_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Input: message content template for tidyair() — tidyair_prompt","title":"Input: message content template for tidyair() — tidyair_prompt","text":"message content serves user input tidyair function.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input: message content template for tidyair() — tidyair_prompt","text":"","code":"tidyair_prompt"},{"path":"https://umatter.github.io/tidyair/reference/tidyair_prompt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input: message content template for tidyair() — tidyair_prompt","text":"## `tidyair` data frame 2 rows 2 columns representing messages object API calls.","code":""},{"path":"https://umatter.github.io/tidyair/reference/tidyair_prompt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Input: message content template for tidyair() — tidyair_prompt","text":"Contributed umatter","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert XML input to CSV — xml_to_csv","title":"Convert XML input to CSV — xml_to_csv","text":"function takes file XML input processes generate corresponding output CSV format. input character string, output printed console. Otherwise, CSV file generated name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert XML input to CSV — xml_to_csv","text":"","code":"xml_to_csv(file)"},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert XML input to CSV — xml_to_csv","text":"file character string representing path file XML input","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert XML input to CSV — xml_to_csv","text":"input character string, function returns output character string prints console. Otherwise, function returns output data frame generates CSV file name input file .csv extension.","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert XML input to CSV — xml_to_csv","text":"","code":"if (FALSE) { xml_string <- '<?xml version=\"1.0\"?> <employees>  <employee>    <firstName>John<\/firstName>    <lastName>Doe<\/lastName>  <\/employee>  <employee>    <firstName>Anna<\/firstName>    <lastName>Smith<\/lastName>  <\/employee>  <employee>    <firstName>Peter<\/firstName>    <lastName>Jones<\/lastName>  <\/employee> <\/employees>' xml_to_csv(xml_string) }"},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Input: message content template for xml_to_csv() — xml_to_csv_prompt","title":"Input: message content template for xml_to_csv() — xml_to_csv_prompt","text":"message content serves user input xml_to_csv function.","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input: message content template for xml_to_csv() — xml_to_csv_prompt","text":"","code":"xml_to_csv_prompt"},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv_prompt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Input: message content template for xml_to_csv() — xml_to_csv_prompt","text":"## `xml_to_csv_prompt` data frame 2 rows 2 columns representing messages object API calls.","code":""},{"path":"https://umatter.github.io/tidyair/reference/xml_to_csv_prompt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Input: message content template for xml_to_csv() — xml_to_csv_prompt","text":"Contributed umatter","code":""}]
